---
name: CI
'on':
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

defaults:
  run:
    working-directory: 'aminvakil.os_update'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'aminvakil.os_update'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint ansible-lint

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - distro: centos8
            playbook: converge.yml
          - distro: centos7
            playbook: converge.yml
          - distro: debian10
            playbook: converge.yml
          - distro: ubuntu20.04
            playbook: converge.yml
          - distro: ubuntu18.04
            playbook: converge.yml
          - distro: ubuntu16.04
            playbook: converge.yml

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'aminvakil.os_update'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule[docker] docker

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_PLAYBOOK: ${{ matrix.playbook }}

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [lint, molecule]
    name: Push to Galaxy
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'aminvakil.os_update'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install ansible-base.
        run: pip3 install ansible-base

      - name: Push to Ansible Galaxy.
        run: ansible-galaxy role import --token ${{ secrets.GALAXY_API_KEY }} $(echo $GITHUB_REPOSITORY | cut -d/ -f1) $(echo $GITHUB_REPOSITORY | cut -d/ -f2)
